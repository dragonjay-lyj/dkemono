---
import { getCollection } from 'astro:content';
import MainLayout from '../../layouts/MainLayout.astro';
import SearchBar from '../../components/common/SearchBar.tsx';
import PaginationWrapper from '../../components/common/PaginationWrapper.tsx';
import ArtistCardProfile from '../../components/artist/ArtistCardProfile.astro';
import PostCard from '../../components/post/PostCard.astro';
import Footer from '../../components/common/Footer.astro';

export async function getStaticPaths() {
  const artists = await getCollection('artists');
  return artists.map((artist) => ({
    params: { slug: artist.slug },
    props: { artist },
  }));
}

const { artist } = Astro.props;
const posts = await getCollection('posts', ({ data }) => data.artist === artist.data.name);
const itemsPerPage = 9; // 每页显示条目数

// 从 URL 参数获取当前页（初始页）
const url = new URL(Astro.request.url);
const initialPage = parseInt(url.searchParams.get('page') || '1', 10);

// 计算总页数
const totalItems = posts.length;
const totalPages = Math.ceil(totalItems / itemsPerPage);

// 确保初始页在有效范围内
const validatedPage = Math.max(1, Math.min(initialPage, totalPages));

export const prerender = true;
---

<MainLayout title={artist.data.name} description={`探索 ${artist.data.name} 的作品`}>
  <div class="container mx-auto px-4 sm:px-6 lg:px-8 py-6 sm:py-8 md:py-10 transition-all duration-300">
    <!-- 画师简介卡片 -->
    <div class="mb-6 sm:mb-8 md:mb-10 animate-fade-in">
      <ArtistCardProfile artist={artist.data} />
    </div>
    <!-- 搜索栏 -->
    <div class="mb-6 sm:mb-8 animate-fade-in-up animation-delay-200">
      <SearchBar
        client:load
        artists={[]}
        posts={posts.map(p => p.data)}
      />
    </div>
    <!-- 帖子列表和分页 -->
    <div class="animate-fade-in-up animation-delay-400">
      <PaginationWrapper
        client:load
        initialPage={validatedPage}
        totalPages={totalPages}
        itemsPerPage={itemsPerPage}
      >
        <div id="post-list" class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4 sm:gap-6 mb-6 sm:mb-8">
          {posts.map((post, index) => (
            <div
              class={`post-item opacity-0 animate-fade-in-up ${index < itemsPerPage ? '' : 'hidden'}`}
              data-page={Math.floor(index / itemsPerPage) + 1}
              style={`animation-delay: ${index % itemsPerPage * 0.1}s;`}
            >
              <PostCard post={post.data} slug={post.slug} />
            </div>
          ))}
        </div>
      </PaginationWrapper>
    </div>
  </div>
  <Footer />
</MainLayout>

<script>
  // 客户端脚本：监听页面变化事件，动态更新内容列表
  window.addEventListener('pageChanged', (event) => {
    const page = event.detail.page;
    // 隐藏所有内容项并移除动画类
    document.querySelectorAll('.post-item').forEach((item) => {
      item.classList.add('hidden', 'opacity-0');
      item.classList.remove('animate-fade-in-up');
    });
    // 显示当前页的内容项并添加动画类
    document.querySelectorAll(`.post-item[data-page="${page}"]`).forEach((item, index) => {
      item.classList.remove('hidden', 'opacity-0');
      item.classList.add('animate-fade-in-up');
      item.setAttribute('style', `animation-delay: ${index * 0.1}s;`);
    });
    // 可选：滚动到列表顶部
    window.scrollTo({ top: 0, behavior: 'smooth' });
  });
</script>

<style>
  /* 自定义动画样式 */
  @keyframes fade-in {
    from {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
  }
  @keyframes fade-in-up {
    from {
      opacity: 0;
      transform: translateY(1rem);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
  .animate-fade-in {
    animation: fade-in 0.6s ease-out forwards;
  }
  .animate-fade-in-up {
    animation: fade-in-up 0.6s ease-out forwards;
  }
  .animation-delay-200 {
    animation-delay: 0.2s;
  }
  .animation-delay-400 {
    animation-delay: 0.4s;
  }
</style>