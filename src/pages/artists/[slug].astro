---
import MainLayout from '../../layouts/Layout.astro';
import ArtistCardLarge from '../../components/ArtistCardLarge.astro';
import PostCard from '../../components/PostCard.astro';
import SearchBar from '../../components/SearchBar';
import Pagination from '../../components/Pagination';
import { getCollection } from 'astro:content';

export async function getStaticPaths() {
  const artists = await getCollection('artists');
  return artists.map(artist => ({
    params: { slug: artist.slug },
    props: { artist },
  }));
}

const { artist } = Astro.props;
const posts = await getCollection('posts', ({ data }) => data.artist === artist.data.name);
const pageSize = 10;
const totalPages = Math.ceil(posts.length / pageSize);
export const prerender = true;
---

<MainLayout
  title={`Artist | ${artist.data.name}`}
  description={`Explore works by ${artist.data.name} on ${artist.data.service}.`}
>
  <script type="application/ld+json">
    {
      "@context": "https://schema.org",
      "@type": "Person",
      "name": "${artist.data.name}",
      "image": "${artist.data.avatar}",
      "description": "Artist on ${artist.data.service}"
    }
  </script>
  <!-- 标题，响应式字体大小，添加渐显动画 -->
  <h1 class="text-lg xs:text-xl sm:text-2xl md:text-3xl lg:text-4xl font-bold mb-3 xs:mb-4 sm:mb-6 text-center text-gray-800 animate-fade-in-down" id="artist-heading">
    {artist.data.name}
  </h1>
  <!-- 艺术家大卡片，添加渐显动画 -->
  <div class="mb-4 xs:mb-5 sm:mb-6 md:mb-8 animate-fade-in">
    <ArtistCardLarge
      name={artist.data.name}
      avatar={artist.data.avatar}
      cover={artist.data.cover}
      service={artist.data.service}
    />
  </div>
  <!-- 搜索栏，添加渐显动画，未来可实现动态数据交互 -->
  <div class="mb-3 xs:mb-4 sm:mb-6 animate-fade-in">
    <SearchBar initialData={[]} client:visible />
    <!-- 注意：当前SearchBar仅更新本地状态，页面数据不会自动更新 -->
    <!-- 可通过Astro端点API（如/api/search.json.ts）实现动态搜索，需在SearchBar组件中添加fetch逻辑 -->
  </div>
  <!-- 分页组件，添加渐显动画，未来可实现动态数据交互 -->
  <div class="mb-3 xs:mb-4 sm:mb-6 animate-fade-in">
    <Pagination totalPages={totalPages} client:only />
    <!-- 注意：当前Pagination仅更新本地状态，页面数据不会自动切片 -->
    <!-- 可通过前端状态管理（如React Context）或Astro端点API实现动态分页 -->
  </div>
  <!-- 帖子卡片网格，响应式列数，添加渐显动画 -->
  <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-3 xs:gap-4 sm:gap-5 md:gap-6 animate-fade-in" role="grid" aria-label="Post cards for artist works">
    {posts.length > 0 ? (
      posts.slice(0, pageSize).map((post, index) => (
        <div class="post-card-item" style={`animation-delay: ${index * 0.05}s`}>
          <PostCard
            title={post.data.title}
            cover={post.data.cover}
            publishDate={post.data.publishDate}
            attachments={post.data.attachments}
            slug={post.slug}
          />
        </div>
      ))
    ) : (
      <p class="text-center text-gray-500 text-xs xs:text-sm sm:text-base col-span-full">未找到该艺术家的帖子。</p>
    )}
  </div>
  <!-- 分页组件，添加渐显动画 -->
  <div class="mt-3 xs:mt-4 sm:mt-6 animate-fade-in">
    <Pagination totalPages={totalPages} client:only />
  </div>
</MainLayout>

<!-- 自定义样式，添加渐显和向下移动动画，优化性能减少动画复杂度 -->
<style>
  @keyframes fade-in {
    from {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
  }
  @keyframes fade-in-down {
    from {
      opacity: 0;
      transform: translateY(-10px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
  .animate-fade-in {
    animation: fade-in 0.6s ease-out forwards;
  }
  .animate-fade-in-down {
    animation: fade-in-down 0.6s ease-out forwards;
  }
  .post-card-item {
    opacity: 0;
    animation: fade-in 0.5s ease-out forwards;
  }
</style>