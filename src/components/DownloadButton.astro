---
interface Props {
  downloadLink: string; // 下载页面链接
  buttonText?: string; // 按钮文本，默认为"Download"
  ariaLabel?: string; // 无障碍性标签，默认为"Navigate to download page"
  disabled?: boolean; // 是否禁用按钮，默认为false
  loading?: boolean; // 是否显示加载状态，默认为false
  customClass?: string; // 可选的自定义样式类
  onClick?: string; // 可选的自定义点击事件处理（作为字符串传递给onclick）
  size?: 'small' | 'medium' | 'large'; // 可选的按钮尺寸，默认为medium
}

const { downloadLink, buttonText = 'Download', ariaLabel = 'Navigate to download page', disabled = false, loading = false, customClass = '', onClick = '', size = 'medium' } = Astro.props;

// 根据尺寸调整样式
const sizeStyles = {
  small: 'px-2 py-1 xs:px-3 xs:py-1.5 text-xs xs:text-sm',
  medium: 'px-3 py-1.5 xs:px-4 xs:py-2 sm:px-6 sm:py-3 text-xs xs:text-sm sm:text-base',
  large: 'px-4 py-2 xs:px-5 xs:py-2.5 sm:px-8 sm:py-4 text-sm xs:text-base sm:text-lg'
}[size];

const iconSizes = {
  small: 'h-3 w-3 xs:h-4 xs:w-4 mr-1',
  medium: 'h-4 w-4 xs:h-5 xs:w-5 sm:h-6 sm:w-6 mr-1 xs:mr-2',
  large: 'h-5 w-5 xs:h-6 xs:w-6 sm:h-7 sm:w-7 mr-1.5 xs:mr-2 sm:mr-3'
}[size];
---

<a
  href={disabled || loading ? '#' : downloadLink}
  class="relative inline-flex items-center justify-center bg-gradient-to-r from-blue-500 to-indigo-600 text-white font-medium rounded-lg shadow-lg overflow-hidden transition-all duration-300 focus:outline-none will-change-transform max-w-full
  ${disabled ? 'opacity-50 cursor-not-allowed bg-gradient-to-r from-blue-400 to-indigo-400' : 'hover:bg-gradient-to-r hover:from-blue-600 hover:to-indigo-700 hover:shadow-xl focus:bg-gradient-to-r focus:from-blue-600 focus:to-indigo-700 focus:scale-105 hover:scale-105'}
  ${loading ? 'opacity-70 cursor-wait' : ''}
  ${sizeStyles}
  ${customClass}"
  aria-label={ariaLabel}
  aria-disabled={disabled}
  tabindex={disabled ? -1 : 0}
  onclick={`${disabled || loading ? 'event.preventDefault();' : ''} ${onClick}`}
>
  <!-- 下载图标或加载图标，响应式大小 -->
  {loading ? (
    <svg xmlns="http://www.w3.org/2000/svg" class={`${iconSizes} animate-spin`} fill="none" viewBox="0 0 24 24" stroke="currentColor" aria-hidden="true">
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15" />
    </svg>
  ) : (
    <svg xmlns="http://www.w3.org/2000/svg" class={`${iconSizes}`} fill="none" viewBox="0 0 24 24" stroke="currentColor" aria-hidden="true">
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4" />
    </svg>
  )}
  <span>{buttonText}</span>
  <!-- 点击波纹效果容器，仅在非禁用和非加载状态下显示 -->
  {!disabled && !loading && <span class="ripple-effect"></span>}
</a>

<!-- 自定义样式，添加点击波纹效果和渐变背景动画，优化性能减少动画复杂度 -->
<style>
  .ripple-effect {
    position: absolute;
    background: rgba(255, 255, 255, 0.3);
    border-radius: 50%;
    width: 0;
    height: 0;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
    pointer-events: none;
  }
  a:active:not([aria-disabled="true"]):not(:disabled) .ripple-effect {
    animation: ripple 0.6s ease-out;
  }
  @keyframes ripple {
    to {
      width: 200%;
      height: 200%;
      opacity: 0;
    }
  }
  /* 加载状态下的旋转动画 */
  .animate-spin {
    animation: spin 1s linear infinite;
  }
  @keyframes spin {
    from {
      transform: rotate(0deg);
    }
    to {
      transform: rotate(360deg);
    }
  }
  /* 渐变背景动画，增强悬停效果 */
  a:not([aria-disabled="true"]):not(:disabled):hover {
    background: linear-gradient(to right, #3b82f6, #4f46e5);
    animation: gradient-shift 1.5s ease infinite;
  }
  @keyframes gradient-shift {
    50% {
      background: linear-gradient(to right, #4f46e5, #3b82f6);
    }
    100% {
      background: linear-gradient(to right, #3b82f6, #4f46e5);
    }
  }
  /* 在低性能设备上禁用渐变动画以提升性能 */
  @media (prefers-reduced-motion: reduce) {
    a:not([aria-disabled="true"]):not(:disabled):hover {
      animation: none;
      background: linear-gradient(to right, #3b82f6, #4f46e5);
    }
  }
</style>