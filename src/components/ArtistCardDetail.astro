---
interface Props {
  name: string;
  avatar: string;
  cover: string;
  title: string;
  publishDate: Date;
  tags: string[];
}

const { name, avatar, cover, title, publishDate, tags } = Astro.props;

// 数据验证：确保关键字段不为空，若为空则提供默认值或提示
const displayName = name || 'Unknown Artist';
const displayCover = cover || '/images/default-cover.jpg';
const displayAvatar = avatar || '/images/default-avatar.jpg';
const displayTitle = title || 'Untitled Post';
const displayPublishDate = publishDate || null;
const displayTags = tags && tags.length > 0 ? tags : [];
---

<div
  class="flex flex-col md:flex-row rounded-xl overflow-hidden shadow-xl mb-8 h-auto md:h-80 transition-all duration-500 hover:shadow-2xl focus-within:shadow-2xl will-change-transform"
  tabindex="0"
  aria-label={`Details for ${displayTitle} by ${displayName}`}
  role="article"
>
  <!-- 左侧区域：封面和画师信息，移动端为顶部，响应式高度调整 -->
  <div class="relative w-full md:w-1/2 h-48 xs:h-56 sm:h-64 md:h-full overflow-hidden will-change-transform">
    <img
      src={displayCover}
      alt={`${displayName} cover image`}
      class="w-full h-full object-cover transition-transform duration-700 hover:scale-110 focus-within:scale-110"
      loading="lazy"
      decoding="async"
    />
    <!-- 渐变遮罩，增强文字可读性 -->
    <div class="absolute inset-0 bg-gradient-to-t from-gray-900/90 via-gray-900/50 to-transparent opacity-80 z-10"></div>
    <!-- 画师信息，响应式调整大小和内边距 -->
    <div class="absolute bottom-0 left-0 p-3 xs:p-4 md:p-6 z-20 flex items-center">
      <div class="relative will-change-transform">
        <img
          src={displayAvatar}
          alt={`${displayName} avatar`}
          class="w-10 h-10 xs:w-12 xs:h-12 md:w-16 md:h-16 rounded-full border-2 md:border-3 border-white/90 shadow-lg transition-transform duration-300 hover:translate-y-[-4px] focus-within:translate-y-[-4px]"
          loading="lazy"
          decoding="async"
        />
        <!-- 头像悬停时的小光点效果，优化性能使用opacity变化 -->
        <div class="absolute -top-1 -right-1 w-2 h-2 xs:w-3 xs:h-3 bg-green-400 rounded-full opacity-0 hover:opacity-100 focus-within:opacity-100 transition-opacity duration-300"></div>
      </div>
      <h3 class="text-white text-sm xs:text-base md:text-xl font-bold ml-2 truncate" title={displayName}>{displayName}</h3>
    </div>
  </div>

  <!-- 右侧区域：帖子详情，移动端为底部，响应式调整内边距和文本大小 -->
  <div class="w-full md:w-1/2 p-3 xs:p-4 md:p-6 bg-gray-50 flex flex-col justify-center transition-colors duration-300 hover:bg-gray-100 focus-within:bg-gray-100">
    <h2 class="text-lg xs:text-xl md:text-2xl font-bold mb-1 xs:mb-2 truncate" title={displayTitle}>{displayTitle}</h2>
    <p class="text-gray-600 text-xs xs:text-sm md:text-base mb-2 md:mb-4">
      发布于: {displayPublishDate ? displayPublishDate.toLocaleDateString() : 'N/A'}
    </p>
    <div class="flex flex-wrap gap-1 xs:gap-1.5 md:gap-2">
      {displayTags.length > 0 ? (
        displayTags.map(tag => (
          <span class="px-1.5 py-0.5 xs:px-2 xs:py-1 bg-blue-100 text-blue-800 text-xs md:text-sm rounded transition-transform duration-200 hover:scale-105 focus:scale-105" title={`Tag: ${tag}`}>{tag}</span>
        ))
      ) : (
        <span class="text-gray-500 text-xs md:text-sm">无标签</span>
      )}
    </div>
  </div>
</div>