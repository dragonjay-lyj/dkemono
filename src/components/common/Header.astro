---
const navLinks = [
  { href: '/', label: '首页', ariaLabel: '首页' },
];
---

<header class="bg-white shadow-lg py-4 md:py-5 sticky top-0 z-50 transition-all duration-300 border-b border-gray-100/50">
  <div class="container mx-auto px-4 sm:px-6 flex justify-between items-center">
    <!-- 网站标题或Logo -->
    <a href="/" class="text-2xl md:text-3xl font-extrabold text-blue-600 hover:text-blue-800 transition-all duration-300 transform hover:scale-105" aria-label="返回首页">
      Artist Gallery
    </a>
    <!-- 导航链接 -->
    <nav class="hidden md:flex space-x-6 lg:space-x-8" aria-label="主导航">
      {navLinks.map(link => (
        <a href={link.href} class="text-gray-800 text-base lg:text-lg font-medium hover:text-blue-600 transition-all duration-300 relative after:absolute after:bottom-0 after:left-0 after:w-0 after:h-0.5 after:bg-blue-600 after:transition-all after:duration-300 hover:after:w-full" aria-label={link.ariaLabel}>
          {link.label}
        </a>
      ))}
    </nav>
    <!-- 移动端汉堡菜单按钮 -->
    <button id="mobile-menu-toggle" class="md:hidden text-gray-800 hover:text-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 transition-all duration-300" aria-label="切换导航菜单" aria-expanded="false">
      <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2.5" stroke-linecap="round" stroke-linejoin="round" class="transition-transform duration-300">
        <line x1="3" y1="12" x2="21" y2="12"></line>
        <line x1="3" y1="6" x2="21" y2="6"></line>
        <line x1="3" y1="18" x2="21" y2="18"></line>
      </svg>
    </button>
  </div>
  <!-- 移动端导航菜单 -->
  <div id="mobile-menu" class="hidden md:hidden bg-white shadow-lg absolute top-0 left-0 w-full z-40 border-b border-gray-200 transition-all duration-300 opacity-0 -translate-y-4">
    <div class="flex justify-between items-center px-4 py-3 border-b border-gray-200">
      <a href="/" class="text-2xl font-extrabold text-blue-600 hover:text-blue-800 transition-all duration-300" aria-label="返回首页">
        Artist Gallery
      </a>
      <button id="mobile-menu-close" class="text-gray-800 hover:text-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 transition-all duration-300" aria-label="关闭导航菜单">
        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2.5" stroke-linecap="round" stroke-linejoin="round">
          <path d="M6 18L18 6M6 6l12 12" />
        </svg>
      </button>
    </div>
    <nav class="flex flex-col px-4 py-2 space-y-3" aria-label="移动端主导航">
      {navLinks.map(link => (
        <a href={link.href} class="text-gray-800 text-lg font-medium hover:text-blue-600 transition-all duration-300 py-2 border-b border-gray-100 last:border-b-0" aria-label={link.ariaLabel}>
          {link.label}
        </a>
      ))}
    </nav>
  </div>
</header>

<script>
  // 移动端菜单切换逻辑
  const toggleButton = document.getElementById('mobile-menu-toggle');
  const closeButton = document.getElementById('mobile-menu-close');
  const mobileMenu = document.getElementById('mobile-menu');

  if (toggleButton && mobileMenu) {
    toggleButton.addEventListener('click', () => {
      const isExpanded = toggleButton.getAttribute('aria-expanded') === 'true';
      toggleButton.setAttribute('aria-expanded', (!isExpanded).toString());
      mobileMenu.classList.toggle('hidden');
      // 动画效果
      if (mobileMenu.classList.contains('hidden')) {
        mobileMenu.classList.add('opacity-0', '-translate-y-4');
        mobileMenu.classList.remove('opacity-100', 'translate-y-0');
      } else {
        mobileMenu.classList.remove('opacity-0', '-translate-y-4');
        mobileMenu.classList.add('opacity-100', 'translate-y-0');
      }
    });
  }

  if (closeButton && mobileMenu && toggleButton) {
    closeButton.addEventListener('click', () => {
      mobileMenu.classList.add('hidden');
      toggleButton.setAttribute('aria-expanded', 'false');
      mobileMenu.classList.add('opacity-0', '-translate-y-4');
      mobileMenu.classList.remove('opacity-100', 'translate-y-0');
    });
  }

  // 点击菜单项关闭菜单
  if (mobileMenu) {
    mobileMenu.querySelectorAll('a').forEach(link => {
      link.addEventListener('click', () => {
        mobileMenu.classList.add('hidden');
        if (toggleButton) {
          toggleButton.setAttribute('aria-expanded', 'false');
        }
        mobileMenu.classList.add('opacity-0', '-translate-y-4');
        mobileMenu.classList.remove('opacity-100', 'translate-y-0');
      });
    });
  }
</script>

<style>
  /* 移动端菜单动画样式 */
  #mobile-menu.opacity-100 {
    opacity: 1;
    transform: translateY(0);
  }
  #mobile-menu.opacity-0 {
    opacity: 0;
    transform: translateY(-1rem);
  }
</style>